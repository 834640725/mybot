#端口和路径
server:
  port: 8080
  servlet:
    context-path: /api


#mybatis 数据源

spring:
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/mybot?useUnicode=utf8mb4&useSSL=false&autoReconnect=true&failOverReadOnly=false&serverTimezone=UTC
    username: root
    password: admin
    driver-class-name: com.mysql.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    connectionInitSqls: set names utf8mb4

  #序列化时间
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  #    default-property-inclusion: non_absent


  #集成 rabbitmq
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    virtual-host: /
    connection-timeout: 150000
    publisher-confirms: true    #开启确认机制 采用消息确认模式,
    publisher-returns: true     #开启return确认机制
    template:                   #消息发出去后,异步等待响应
      mandatory: true           #设置为 true 后,消费者在消息没有被路由到合适队列情况下会被return监听,而不会自动删除

  #集成redis
  redis:
    database: 0
    host: localhost
    timeout: 5000
    jedis:
      pool:
        max-active: 8
        max-idle: 8
        max-wait: -1
        min-idle: 0

##########SpringSecurity示例实现权限注解+JWT登录认证###############################################################
jwt:
  # 密匙KEY
  secret: JWTSecret
  # HeaderKEY
  tokenHeader: Authorization
  # Token前缀字符
  tokenPrefix: Sans-
  # 过期时间 单位秒 1天后过期=86400 7天后过期=604800
  expiration: 86400
  # 配置不需要认证的接口
  antMatchers: /index,/login/**,/favicon.ico


##########SpringSecurity示例实现权限注解+JWT登录认证###############################################################


##jwt配置
audience:
  # 代表这个JWT的接收对象,存入audience
  clientId: 098f6bcd4621d373cade4e832627b4f6
  # 密钥, 经过Base64加密, 可自行替换
  base64Secret: MDk4ZjZiY2Q0NjIxZDM3M2NhZGU0ZTgzMjYyN2I0ZjY=
  # JWT的签发主体，存入issuer
  name: restapiuser
  # 过期时间，时间戳
  expiresSecond: 172800

#mybatis 别名包和xml路径
mybatis:
  type-aliases-package: com.boot.lea.mybot
  mapper-locations: classpath:mapper/*.xml

#sql日志
logging:
  level:
    com:
      boot:
        lea:
          mybot: debug



##########################
mybatis-plus:
  # xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）
  mapper-locations: classpath:mapper/*.xml
  # 以下配置均有默认值,可以不设置
  global-config:
    db-config:
      #主键类型 AUTO:"数据库ID自增" INPUT:"用户输入ID",ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
      id-type: AUTO
      #字段策略 IGNORED:"忽略判断"  NOT_NULL:"非 NULL 判断")  NOT_EMPTY:"非空判断"
      field-strategy: NOT_EMPTY
      #数据库类型
      db-type: MYSQL
  configuration:
    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射
    map-underscore-to-camel-case: true
    # 返回map时true:当查询数据为空时字段返回为null,false:不加这个查询数据为空时，字段将被隐藏
    call-setters-on-nulls: true
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
##########################


#    security:
#      away: jdbc
#      # Spring Security 内存方式用户列表示例
#      users:
#        - username: hengboy
#          password: 123456
#          roles: good
#        - username: apiboot
#          password: abc321
#          roles: user,order
#
#    logging:
#      # 修改每间隔10秒执行一次上报日志
#      report-interval-second: 10
#      admin:
#        # Logging Admin 服务地址
#        server-address: 127.0.0.1:9090
#        # 显示上报日志
#        show-console-report-log: true
#        # 格式化上报日志
#        format-console-log-json: true
#        # 修改日志路径前缀，可配置多个
#      logging-path-prefix:
#        - /user/**
#        - /order/**
#        # 排除采集请求日志的路径列表
#      ignore-paths:
#        - /actuator/health
#
#      discovery:
#        # Logging Admin ServiceID
#        service-id: sample-logging-admin
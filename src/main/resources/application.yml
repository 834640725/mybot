#端口和路径
server:
  port: 8080
  servlet:
    context-path: /api


#mybatis 数据源

spring:
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/mybot?useUnicode=true&useSSL=false&autoReconnect=true&failOverReadOnly=false&serverTimezone=UTC
    username: root
    password: admin
    driver-class-name: com.mysql.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource

  #序列化时间
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  #    default-property-inclusion: non_absent


#集成 rabbitmq
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    virtual-host: /
    connection-timeout: 150000
    publisher-confirms: true    #开启确认机制 采用消息确认模式,
    publisher-returns: true     #开启return确认机制
    template:                   #消息发出去后,异步等待响应
      mandatory: true           #设置为 true 后,消费者在消息没有被路由到合适队列情况下会被return监听,而不会自动删除




#mybatis 别名包和xml路径
mybatis:
  type-aliases-package: com.boot.lea.mybot
  mapper-locations: classpath:mapper/*.xml

#sql日志
logging:
  level:
    com:
      boot:
        lea:
          mybot: debug

#    security:
#      away: jdbc
#      # Spring Security 内存方式用户列表示例
#      users:
#        - username: hengboy
#          password: 123456
#          roles: good
#        - username: apiboot
#          password: abc321
#          roles: user,order
#
#    logging:
#      # 修改每间隔10秒执行一次上报日志
#      report-interval-second: 10
#      admin:
#        # Logging Admin 服务地址
#        server-address: 127.0.0.1:9090
#        # 显示上报日志
#        show-console-report-log: true
#        # 格式化上报日志
#        format-console-log-json: true
#        # 修改日志路径前缀，可配置多个
#      logging-path-prefix:
#        - /user/**
#        - /order/**
#        # 排除采集请求日志的路径列表
#      ignore-paths:
#        - /actuator/health
#
#      discovery:
#        # Logging Admin ServiceID
#        service-id: sample-logging-admin